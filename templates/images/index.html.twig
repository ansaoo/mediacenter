{% extends 'base.html.twig' %}

{% block title_page %}Images{% endblock %}

{% block stylesheets %}

    <link href="{{ asset('css/plugins/jsTree/style.min.css') }}" rel="stylesheet">
    <link href="{{ asset('css/plugins/nanogallery2/nanogallery2.min.css') }}" rel="stylesheet">
    <style>
        .hidden {
            display: none;
        }
    </style>
{% endblock %}

{% block page_heading %}
    <div class="col-lg-10">
        <h2>Images</h2>
        <ol class="breadcrumb">
            <li>
                <a href="#">Home</a>
            </li>
            <li class="active">
                <strong>Images</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
{% endblock page_heading %}

{% block body %}
    <div class="row">
        <div class="col-lg-3">
            <div class="ibox float-e-margins">
                <div class="ibox-content">
                    <div class="file-manager">
                        <div class="hr-line-dashed"></div>

                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <span class="btn btn-primary btn-file">
                                <span class="fileinput-new">Upload files</span>
                            <span class="fileinput-exists">Changer</span>
                                <input type="file" id="upload_task_file" name="upload_task[file]" multiple/>
                            </span>
                            <span class="fileinput-filename"></span>
                            <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="float: none">Ã—</a>
                        </div>
                        <div id="progress_span" class="m-t-sm small"></div>
                        <div id="progress" class="progress progress-mini" style="margin-bottom: 10px">
                            <div class="progress-bar" style="width: 0%;"></div>
                        </div>

                        <div class="hr-line-dashed"></div>

                        <h5>Search </h5>
                        {{ form_start(form) }}
                        <div class="input-group m-b">
                            {{ form_widget(form.keyword, {attr: {placeholder: 'yyyy, yyyy-mm, ...'}}) }}
                            <span class="input-group-btn">
                            <button type="submit" class="btn btn-primary">
                                <i class="fa fa-search"></i> Search
                            </button>
                        </span>
                        </div>

                        <h5 class="tag-title">Tags</h5>
                        <hx:include src="{{ url('tag_view', {'index':'image','tag':app.request.get('tag')}) }}" xmlns:hx="http://purl.org/NET/hinclude">
                            {{ include('utils/loading.html.twig') }}
                        </hx:include>
                        <div class="clearfix"></div>

                        <div class="hr-line-dashed"></div>

                        <h5>Stats </h5>
                        <div class="tot-img">0 photos</div>
                        <div class="size-img">0 Go</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-9 animated fadeInRight">
            <div class="row">
                <div class="col-lg-12">
                    <div class="ibox float-e-margins">
                        <div class="ibox-title">
                            <h5>{{ title }}</h5>
                            <div class="pull-right">
                                <button type="button" class="btn btn-xs btn-info hidden" id="add_tag">Tagger</button>
                                <button type="button" class="btn btn-xs btn-warning hidden" id="delete">Supprimer</button>
                            </div>
                        </div>
                        <div class="ibox-content">
                            <div id="my_nanogallery2"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block javascripts %}

    <!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
    <script src="{{ asset('js/plugins/blueimp/vendor/jquery.ui.widget.js') }}"></script>
    <!-- nanoGallery2 script -->
    <script src="{{ asset('js/plugins/nanogallery2/jquery.nanogallery2.min.js') }}"></script>
    <!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
    <script src="{{ asset('js/plugins/blueimp/jquery.iframe-transport.js') }}"></script>
    <!-- The basic File Upload plugin -->
    <script src="{{ asset('js/plugins/blueimp/jquery.fileupload.js') }}"></script>
    <!-- The File Upload processing plugin -->
    <script src="{{ asset('js/plugins/blueimp/jquery.fileupload-process.js') }}"></script>
    {#<!-- The File Upload validation plugin -->#}
    {#<script src="{{ asset('js/plugins/blueimp/jquery.fileupload-validate.js') }}"></script>#}
    {#<!-- The File Upload user interface plugin -->#}
    {#<script src="{{ asset('js/plugins/blueimp/jquery.fileupload-ui.js') }}"></script>#}
    <!-- The main application script -->
    <script src="{{ asset('js/plugins/blueimp/main.js') }}"></script>
    <!-- The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9 -->
    {#<!--[if (gte IE 8)&(lt IE 10)]>#}
    {#<script src="{{ asset('js/plugins/blueimp/js/cors/jquery.xdr-transport.js') }}"></script>#}
    {#<![endif]-->#}
    <script>
        $(document).ready(function () {

            $.ajax({
                url: '{{ api_url }}/api.php/elastic/size/image',
                dataType: 'json'
            }).done(function (response) {
                $('.tot-img').text(
                    '%nb% photos'.replace('%nb%',response.total)
                );
                $('.size-img').text(
                    '%nb%'.replace('%nb%', response.size)
                );
            }).fail(function () {

            });

            $('#upload_task_file').fileupload({
                url: 'upload',
                sequentialUploads: false,
                dataType: 'json',
                replaceFileInput: true,
                limitConcurrentUploads: 5,
                done: function (e, data) {
                    var progress_info = $('#progress_span');
//                    progress_info.text('Finalisation ...');
                    $.getJSON(
                        'merge_file',
                        {
                            file: data.files[0].name,
                            size: data.files[0].size,
                            lastModified: data.files[0].lastModifiedDate.toString(),
                            type: 'image_path'
                        },
                        function (result) {//                            progress_info.text('');
                            if (result.success) {
                                toastr.success('%filename% ok'.replace('%filename%', result.filename));
                            } else {
                                $('#progress .progress-bar').css('width', '0%');
                                toastr.error('%filename% fail'.replace('%filename%', result.filename))
                            }
                        }).fail(function () {
                        progress_info.text('');
                        $('#progress .progress-bar').css('width', '0%');
                        toastr.error('Error');
                    });
                },
                progressall: function (e, data) {
                    var progress_info = $('#progress_span');
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                    if (progress <= 100) {
                        progress_info.text('Uploading ... ' + progress + ' %');
                    } else {
                        progress_info.text('');
                    }
                },
                maxChunkSize: 1900000,
                add: function (e, data) {
                    var that = this;
                    var fu = $(this).data('blueimp-fileupload') || $(this).data('fileupload');
                    $.getJSON('verif_file', {
                        file: data.files[0].name,
                        maxChunkSize: fu.options.maxChunkSize
                    }, function (result) {
                        var file = result.file;
                        data.uploadedBytes = file && file.size;
                        if (file.size === 0) {
                            $.blueimp.fileupload.prototype
                                .options.add.call(that, e, data);
                        } else if (confirm('File partial uploaded. Do you want to resume it ?')) {
                            $.blueimp.fileupload.prototype
                                .options.add.call(that, e, data);
                        }
                    });
                }
            });

            $("#my_nanogallery2").nanogallery2({
                items: JSON.parse($.ajax({
                    url: '{{ api_url }}/api.php/elastic/{{ method }}',
                    data: {
                        {% for key,value in keyword %}
                        '{{ key }}': '{{ value }}',
                        {% endfor %}
                    },
                    dataType: 'json',
                    async: false,
                    error: function () {
                        toastr.error('Error in loading data');
                        $("#my_nanogallery2").append(
                            $('<div>').attr({'class': 'alert alert-danger'}).append(
                                $('<p>').attr({'class': 'text-center'}).append('Node not found in cluster')
                            )
                        );
                    }
                }).responseText),
                thumbnailWidth:  'auto',
                thumbnailHeight: 150,
                thumbnailBorderHorizontal: 0,
                thumbnailBorderVertical: 0,
                thumbnailSelectable: true,
                thumbnailAlignment: 'center',
                thumbnailLabel:     { display: false },
//                viewerToolbar:    {
//                    standard:  'minimizeButton, label, shareButton, fullscreenButton',
//                    minimized: 'minimizeButton, label, fullscreenButton, downloadButton, infoButton' },
//                viewerTools:    {
//                    topLeft:   'label',
//                    topRight:  'playPauseButton, zoomButton, fullscreenButton, closeButton' },
                itemsBaseURL:    '{{ path('download', {'base': 'img', 'filename': ''}) }}',
                locationHash:    false
            }).on('itemSelected.nanogallery2', function () {
                $('#delete').removeClass('hidden');
                $('#add_tag').removeClass('hidden');
            }).on('itemUnSelected.nanogallery2', function () {
                if ($('#my_nanogallery2').nanogallery2('itemsSelectedGet').length === 0) {
                    $('#delete').addClass('hidden');
                    $('#add_tag').addClass('hidden');
                }
            });

            $('#delete').on('click', function () {
                var arr = $('#my_nanogallery2').nanogallery2('itemsSelectedGet');
                $(arr).each(function () {
                    $.getJSON(
                        '{{ api_url }}/api.php/elastic/delete/image/'+this.title,
                        {},
                        function (response) {
                            toastr.success(response);
                        }
                    );
                });
            });

            $('#add_tag').on('click', function () {
                var arr = $('#my_nanogallery2').nanogallery2('itemsSelectedGet');
                var tag = prompt('Set a tag:');
                $(arr).each(function () {
                    $.getJSON(
                        '{{ api_url }}/api.php/elastic/add_tag/image/'+this.title+'/'+tag,
                        {},
                        function (response) {
                            toastr.success(response);
                        }
                    );
                });
            });

            $('#mkdir').on('click',function () {
                var new_folder = prompt('Nouveau dossier');
                $.ajax({
                    url: '{{ path('create_folder') }}',
                    method: 'POST',
                    data: {'folder': new_folder},
                    dataType: 'json'
                }).done(function (response) {
                    if (response.done) {
                        toastr.success('Folder %name% was created.'.replace('%name%', response.done));
                    } else {
                        toastr.error(response.error)
                    }
                }).fail(function (xhr, textStatus, errorThrown) {
                    toastr.error(errorThrown);
                })
            });
        })
    </script>

{% endblock javascripts %}
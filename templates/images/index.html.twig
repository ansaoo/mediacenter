{% extends 'base.html.twig' %}

{% block title_page %}Images{% endblock %}

{% block stylesheets %}

    <link href="{{ asset('css/plugins/nanogallery2/nanogallery2.min.css') }}" rel="stylesheet">
    <link href="{{ asset('css/plugins/bootstrap-datepicker/bootstrap-datepicker3.min.css') }}" rel="stylesheet">
    <style>
        .hidden {
            display: none;
        }
    </style>
{% endblock %}

{% block page_heading %}
    <div class="col-lg-10">
        <h2>Images</h2>
        <ol class="breadcrumb">
            <li>
                <a href="#">Home</a>
            </li>
            <li class="active">
                <strong>Images</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
{% endblock page_heading %}

{% block body %}
    <div class="row">
        <div class="col-lg-3">
            <div class="ibox float-e-margins">
                <div class="ibox-content mailbox-content">
                    <div class="file-manager">
                        {#<div class="hr-line-dashed"></div>#}
                        <h5>New</h5>
                        <div class="fileinput fileinput-new" data-provides="fileinput">
                            <span class="btn btn-primary btn-file">
                                <i class="fa fa-upload"></i>
                                <span class="fileinput-new">Upload files</span>
                            <span class="fileinput-exists">Changer</span>
                                <input type="file" id="upload_task_file" name="upload_task[file]" multiple/>
                            </span>
                            <span class="fileinput-filename"></span>
                            <a href="#" class="close fileinput-exists" data-dismiss="fileinput" style="float: none">Ã—</a>
                        </div>
                        <div id="progress_span" class="m-t-sm small"></div>
                        <div id="progress" class="progress progress-mini" style="margin-bottom: 10px">
                            <div class="progress-bar" style="width: 0%;"></div>
                        </div>
                        <div class="space-25"></div>
                        {#<div class="hr-line-dashed"></div>#}

                        <h5>Search </h5>
                        {{ form_start(form) }}
                        <div class="input-group input-daterange">
                            {{ form_widget(form.fromDate, {attr: {placeholder: '2012-12-01'}}) }}
                            <div class="input-group-addon">to</div>
                            {{ form_widget(form.toDate, {attr: {placeholder: '2012-12-01'}}) }}
                        </div>
                        <div class="input-group m-b">
                            {{ form_widget(form.keyword, {attr: {placeholder: 'Keyword'}}) }}
                            <span class="input-group-btn">
                            <button type="submit" class="btn btn-primary">
                                <i class="fa fa-search"></i>
                            </button>
                            </span>
                        </div>
                        {{ form_end(form) }}

                        <h5 class="tag-title">Tags</h5>
                        <hx:include src="{{ url('tag_view', {'index':'image','tag':app.request.get('tag')}) }}" xmlns:hx="http://purl.org/NET/hinclude">
                            {{ include('utils/loading.html.twig') }}
                        </hx:include>

                        <div class="clearfix"></div><br/>

                        {#<div class="hr-line-dashed"></div>#}

                        <h5>Stats </h5>
                        <div class="stats">
                            <span>0 photos</span><br/>
                            <span>0 Go</span>
                        </div>

                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-9 animated fadeInRight">
            <div class="ibox float-e-margins">
                        <div class="mail-box-header">
                            <div class="pull-right">
                                <button id="refresh" type="button" class="btn btn-white btn-sm" data-toggle="tooltip" data-placement="left" title="Refresh inbox"><i class="fa fa-refresh"></i> Refresh</button>
                                {#<button type="button" class="btn btn-sm btn-success hidden" id="to_dropbox" title="Dropbox"><i class="fa fa-dropbox"> </i></button>#}
                                <div class="btn-group">
                                    <button data-toggle="dropdown" class="btn btn-sm btn-success hidden dropdown-toggle" id="dropbox"><i class="fa fa-dropbox"></i></button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <a href="">vers Photos</a>
                                        </li>
                                        <li>
                                            <a href="">vers Parents</a>
                                        </li>
                                    </ul>
                                </div>
                                <button type="button" class="btn btn-sm btn-warning hidden" id="add_tag" title="Tagger"><i class="fa fa-pencil"> </i></button>
                                <button type="button" class="btn btn-sm btn-danger hidden" id="delete" title="Supprimer"><i class="fa fa-trash"> </i></button>
                            </div>
                            <h2>{{ title }}</h2>
                        </div>
                        <div class="ibox-content">
                            <div id="my_nanogallery2"></div>
                        </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block javascripts %}

    <!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
    <script src="{{ asset('js/plugins/blueimp/vendor/jquery.ui.widget.js') }}"></script>
    <!-- nanoGallery2 script -->
    <script src="{{ asset('js/plugins/nanogallery2/jquery.nanogallery2.min.js') }}"></script>
    <!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
    <script src="{{ asset('js/plugins/blueimp/jquery.iframe-transport.js') }}"></script>
    <!-- The basic File Upload plugin -->
    <script src="{{ asset('js/plugins/blueimp/jquery.fileupload.js') }}"></script>
    <!-- The File Upload processing plugin -->
    <script src="{{ asset('js/plugins/blueimp/jquery.fileupload-process.js') }}"></script>
    {#<!-- The File Upload validation plugin -->#}
    {#<script src="{{ asset('js/plugins/blueimp/jquery.fileupload-validate.js') }}"></script>#}
    {#<!-- The File Upload user interface plugin -->#}
    {#<script src="{{ asset('js/plugins/blueimp/jquery.fileupload-ui.js') }}"></script>#}
    <!-- The main application script -->
    <script src="{{ asset('js/plugins/blueimp/main.js') }}"></script>
    <!-- The XDomainRequest Transport is included for cross-domain file deletion for IE 8 and IE 9 -->
    {#<!--[if (gte IE 8)&(lt IE 10)]>#}
    {#<script src="{{ asset('js/plugins/blueimp/js/cors/jquery.xdr-transport.js') }}"></script>#}
    {#<![endif]-->#}

    <script src="{{ asset('js/plugins/bootstrap-datepicker/bootstrap-datepicker.min.js') }}"></script>
    <script>
        function simpleLoad(btn, state) {
            if (state) {
                btn.children().addClass('fa-spin');
                btn.contents().last().replaceWith(" Loading");
            } else {
                setTimeout(function () {
                    btn.children().removeClass('fa-spin');
                    btn.contents().last().replaceWith(" Refresh");
                }, 1000);
            }
        }

        function stats($selector) {
            $.ajax({
                url: '{{ path('es_size', {'index':'image'}) }}',
                dataType: 'json'
            }).done(function (response) {
                var data = '';
                if (response.image) {
                    data = data + '<span>%nb% photos</span>'.replace('%nb%', $.number(response.image));
                }
                if (response.video) {
                    data = data + '<br/><span>%nb% videos</span>'.replace('%nb%', $.number(response.video));
                }
                if (response.size) {
                    data = data + '<br/><span>%nb%</span>'.replace('%nb%', response.size);
                }
                $($selector).html(data);
            }).fail(function () {
                toastr.error('Error in loading data');
                $($selector).append(
                    $('<div>').attr({'class': 'alert alert-danger'}).append(
                        $('<p>').attr({'class': 'text-center'}).append('Node not found in cluster')
                    )
                );
            });
        }

        function init($gallery) {
            $.when(
                $.ajax({
                    {% if method == 'recent/image' %}
                    url: '{{ path('es_recent',{'index':'image'}) }}',
                    {% else %}
                    url: '{{ path('es_search',{'index':'image'}) }}',
                    {% endif %}
                    data: {
                        {% for key,value in keyword %}
                        '{{ key }}': '{{ value }}',
                        {% endfor %}
                    },
                    dataType: 'json',
//                    async: false,
                    error: function () {
                        toastr.error('Error in loading data');
                        $gallery.append(
                            $('<div>').attr({'class': 'alert alert-danger'}).append(
                                $('<p>').attr({'class': 'text-center'}).append('Node not found in cluster')
                            )
                        );
                    }
                })
            ).done(function (data) {
                $gallery.nanogallery2({
                    items: data,
                    thumbnailWidth: 'auto',
                    thumbnailHeight: 150,
                    thumbnailBorderHorizontal: 0,
                    thumbnailBorderVertical: 0,
                    thumbnailSelectable: true,
                    thumbnailAlignment: 'center',
                    thumbnailLabel: {display: false},
//                viewerToolbar:    {
//                    standard:  'minimizeButton, label, shareButton, fullscreenButton',
//                    minimized: 'minimizeButton, label, fullscreenButton, downloadButton, infoButton' },
//                viewerTools:    {
//                    topLeft:   'label',
//                    topRight:  'playPauseButton, zoomButton, fullscreenButton, closeButton' },
                    itemsBaseURL: '{{ path('download', {'base': 'img', 'filename': ''}) }}',
                    locationHash: false
                }).on('itemSelected.nanogallery2', function () {
                    $('#delete').removeClass('hidden');
                    $('#add_tag').removeClass('hidden');
                    $('#dropbox').removeClass('hidden');
                }).on('itemUnSelected.nanogallery2', function () {
                    if ($gallery.nanogallery2('itemsSelectedGet').length === 0) {
                        $('#delete').addClass('hidden');
                        $('#add_tag').addClass('hidden');
                        $('#dropbox').addClass('hidden');
                    }
                });
            });
        }

        $(document).ready(function () {

            var $gallery = $("#my_nanogallery2");

            $('.input-daterange').datepicker({
                format: 'yyyy-mm-dd',
                keyboardNavigation: true,
                forceParse: false,
                autoclose: false
            });

            stats('.stats');

            $('#upload_task_file').fileupload({
                url: 'upload',
                sequentialUploads: false,
                dataType: 'json',
                replaceFileInput: true,
                limitConcurrentUploads: 4,
                done: function (e, data) {
                    var progress_info = $('#progress_span');
//                    progress_info.text('Finalisation ...');
                    $.getJSON(
                        'merge_file',
                        {
                            file: data.files[0].name,
                            size: data.files[0].size,
                            lastModified: data.files[0].lastModifiedDate.toString(),
                            type: 'image_tmp_path'
                        },
                        function (result) {//                            progress_info.text('');
                            if (result.success) {
                                toastr.success('%filename% ok'.replace('%filename%', result.filename));
                            } else {
                                $('#progress .progress-bar').css('width', '0%');
                                toastr.error('%filename% fail'.replace('%filename%', result.filename))
                            }
                        }).fail(function () {
//                        progress_info.text('');
//                        $('#progress .progress-bar').css('width', '0%');
                        toastr.error('Error');
                    });
//                    $('button#refresh').click();
                },
                progressall: function (e, data) {
                    var progress_info = $('#progress_span');
                    var progress = parseInt(data.loaded / data.total * 100, 10);
                    $('#progress .progress-bar').css(
                        'width',
                        progress + '%'
                    );
                    if (progress <= 100) {
                        progress_info.text('Uploading ... ' + progress + ' %');
                    } else {
                        progress_info.text('');
                    }
                },
                maxChunkSize: 1900000,
                add: function (e, data) {
                    var that = this;
                    var fu = $(this).data('blueimp-fileupload') || $(this).data('fileupload');
                    $.getJSON(
                        'verif_file',
                        {
                            file: data.files[0].name,
                            maxChunkSize: fu.options.maxChunkSize
                        },
                        function (result) {
                            var file = result.file;
                            data.uploadedBytes = file && file.size;
                            if (file.size === 0) {
                                $.blueimp.fileupload.prototype
                                    .options.add.call(that, e, data);
                            } else if (confirm('File partial uploaded. Do you want to resume it ?')) {
                                $.blueimp.fileupload.prototype
                                    .options.add.call(that, e, data);
                            }
                        }
                    );
                }
            });

            init($gallery);

            $(document)
                .on('click','button#refresh',function () {
                    btn = $(this);
                    simpleLoad(btn, true);
                    $gallery.nanogallery2('destroy');
                    init($gallery);
                    stats('.stats');
                    simpleLoad(btn, false);
                })
                .on('click','button#delete', function () {
                    var arr = $gallery.nanogallery2('itemsSelectedGet');
                    $(arr).each(function () {
                        $.getJSON(
                            '{{ path('es_delete', {'index': 'image'}) }}',
                            {
                                _id: this.title
                            },
                            function (response) {
                                toastr.success(response);
                            }
                        );
                    });
                })
                .on('click','button#add_tag', function () {
                    var arr = $gallery.nanogallery2('itemsSelectedGet');
                    var tag = prompt('Set a tag:');
                    $(arr).each(function () {
                        $.getJSON(
                            '{{ path('es_add_tag', {'index': 'image'}) }}',
                            {
                                _id: this.title,
                                tag: tag
                            },
                            function (response) {
                                toastr.success(response);
                            }
                        );
                    });
                })
                .on('click','.dropdown-menu a', function (event) {
                    event.preventDefault();
                    var arr = $gallery.nanogallery2('itemsSelectedGet');
                    $(arr).each(function () {
                        console.log(this.title);
                        $.getJSON(
                            '{{ path('send_to_dropbox') }}',
                            {
                                src: this.src,
                                title: this.title
                            },
                            function (response) {
                                if (response.error) {
                                    toastr.error(response.error);
                                } else {
                                    toastr.success(response.success);
                                }
                            }
                        );
                    });
                })
            ;
        })
    </script>

{% endblock javascripts %}